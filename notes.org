* In Generalized Paxos, it is only required that at all times the set of learned values be compatible. We require that it from a chain.
What are the implications of this?
** None in practice it seems, as all of the algorithms guarantee the chain property.
* Why do we have the consistency property?
* Fast and safe rounds:
** Fast rounds have lower latency but tolerate less faults.
** Safe rounds have a higher latency but tolerate more faults.
* Vertical Paxos allows reconfiguration but not changing algorithm.
* Classification of algorithms:
** Best case latency
** Size of read quorums: number of faults that can be tolerated before reconfiguration.
** Number of crashes before deviation from optimal latency (in the 2f+1 case?).
* Benefits of generalized consensus: Fast algorithms only?
* Fast Paxos also combines two strategies, but without a clear isolation.
* Composition correctness: difficulty is showing that the abort and initialize actions simulate actions of the single-instance specification.
